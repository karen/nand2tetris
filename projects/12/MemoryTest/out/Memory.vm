function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 1
push static 1
pop static 2
push constant 0
pop static 3
push constant 1
pop static 4
push static 2
push static 3
add  
push constant 14335
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 2
push static 4
add  
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return  
function Memory.peek 0
push static 0
push argument 0
add  
pop pointer 1
push that 0
return  
function Memory.poke 0
push static 0
push argument 0
add  
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return  
function Memory.alloc 3
push static 2
pop local 0
push constant 0
pop local 1
label LABEL1 
push local 0
push static 3
add  
pop pointer 1
push that 0
push argument 0
gt  
not  
push local 0
push static 4
add  
pop pointer 1
push that 0
push constant 0
eq  
not  
and  
not  
if-goto LABEL2 
push local 0
pop local 1
push local 0
push static 4
add  
pop pointer 1
push that 0
pop local 0
goto LABEL1 
label LABEL2 
push local 0
push static 3
add  
pop pointer 1
push that 0
push argument 0
push constant 1
add  
gt  
not  
not  
if-goto LABEL4 
push local 1
push constant 0
eq  
not  
if-goto LABEL6 
push local 0
push static 4
add  
pop pointer 1
push that 0
pop static 2
goto LABEL5 
label LABEL6 
push local 1
push static 4
add  
push local 0
push static 4
add  
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label LABEL5 
push local 0
push static 3
add  
pop pointer 1
push that 0
push constant 1
sub  
pop argument 0
goto LABEL3 
label LABEL4 
label LABEL3 
push local 0
push static 3
add  
push local 0
push static 3
add  
pop pointer 1
push that 0
push argument 0
push constant 1
add  
sub  
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 0
push static 3
add  
pop pointer 1
push that 0
add  
push constant 1
add  
pop local 2
push local 2
push constant 1
neg  
add  
push argument 0
push constant 1
add  
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
return  
function Memory.deAlloc 1
push argument 0
push constant 1
sub  
pop local 0
push local 0
push static 3
add  
push argument 0
push constant 1
neg  
add  
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push static 4
add  
push static 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
pop static 2
push constant 0
return  
